---
root: true
env:
  es2021: true
extends:
- eslint:all
- plugin:vue/base
- plugin:vue/vue3-recommended
- plugin:@typescript-eslint/strict
parser: vue-eslint-parser
parserOptions:
  parser: "@typescript-eslint/parser"
  sourceType: module
  project:
  - "./tsconfig.json"
  extraFileExtensions:
  - ".vue"
rules:
  "@typescript-eslint/consistent-type-definitions": #Keeping type rather than interfaces as the default for consistency
    - 1
    - type
  "@typescript-eslint/no-shadow": 2 #Needed for TS as a replacement to "no-shadow"
  "@typescript-eslint/no-unused-vars": 2 #Needed for TS as a replacement to "no-unused-vars"
  array-bracket-spacing:
    - 1
    - always
    - singleValue: false
      objectsInArrays: false
      arraysInArrays: false
  array-bracket-newline:
    - 1
    - consistent
  array-element-newline:
    - 1
    - consistent
  class-methods-use-this: #Class field can't always be made to use this
    - 1
    - enforceForClassFields: false
  comma-dangle:
    - 1
    - always-multiline
  complexity: 0 #Impose an arbitrary limit
  curly: #Use of curly for control statement only when necessary
    - 1
    - multi-line
  dot-location:
    - 1
    - property
  eqeqeq: 0 #Use === only when necessary
  func-style: #Prefer declaration than expression when defining functions
    - 1
    - declaration
  function-call-argument-newline: #Consistent line breaks for arguments because it makes no sense to have "always" as default
    - 1
    - consistent
  id-length: #Authorize "_" as an unused identifier
    - 1
    - exceptions:
      - _
  indent: #Tabulation = 2 spaces
    - 1
    - 2
  init-declarations: 0 #Allow empty initialisations for variables
  line-comment-position: 0 #Allow using comments above and on the same line
  lines-around-comment: 0 #No need for lines around comments
  lines-between-class-members: #Allow absence of lines between class properties
    - 1
    - always
    - exceptAfterSingleLine: true
  max-depth: 0 #Impose an arbitrary limit
  max-len: 0 #Impose an arbitrary limit
  max-lines: 0 #Impose an arbitrary limit
  max-lines-per-function: 0 #Impose an arbitrary limit
  max-params: 0 #Impose an arbitrary limit
  max-statements: 0 #Impose an arbitrary limit
  multiline-ternary: #Allows short ternary to be oneliners
    - 1
    - always-multiline
  no-bitwise: 0 #Useful features should not be banned
  no-control-regex: 0 #Useful features should not be banned
  no-continue: 0 #Useful features should not be banned
  no-inline-comments: 0 #Inline comments should be allowed
  no-labels: 0 #Useful features should not be banned
  no-magic-numbers: #TODO
    - 0
    - ignoreArrayIndexes: true
      ignore:
        - 0
        - 1
  no-mixed-operators: 0 #Conflicts with "no-extra-parens"
  no-plusplus: 0 #Useful features should not be banned
  no-shadow: 0 #Disabled for TS compatibility
  no-ternary: 0 #Useful features should not be banned
  no-undefined: 0 #Rule makes no sense. It recommends complex workarounds to avoid rare problems
  no-use-before-define: 0 #Prevents recursive functions/classes/etc.
  object-curly-spacing:
    - 1
    - always
  object-property-newline:
    - 1
    - allowAllPropertiesOnSameLine: true
  one-var: #Same line declarations are often hard to read and simplify little
    - 1
    - never
  padded-blocks:
    - 1
    - never
  quote-props: #Using quotes on properties is verbose
    - 1
    - as-needed
  quotes:
    - 1
    - single
  semi:
    - 1
    - never
  sort-imports: #Rule wants you to sort multiple imports before single imports, which makes no sense
    - 1
    - ignoreDeclarationSort: true
  sort-keys: 0 #Sorting keys prevents from using semantic sorting
  vue/array-bracket-newline:
    - 1
    - consistent
  vue/array-bracket-spacing: 1
  vue/arrow-spacing: 1
  vue/block-spacing: 1
  vue/block-tag-newline: 1
  vue/brace-style: 1
  vue/camelcase: 1
  vue/comma-dangle:
    - 1
    - always-multiline
  vue/comma-spacing: 1
  vue/comma-style: 1
  vue/component-name-in-template-casing: 1
  vue/custom-event-name-casing: 1
  vue/dot-location:
    - 1
    - property
  vue/dot-notation: 1
  vue/func-call-spacing: 1
  vue/html-button-has-type: 1
  vue/html-comment-content-newline: 1
  vue/html-comment-content-spacing: 1
  vue/html-comment-indent: 1
  vue/html-self-closing:
    - 1
    - html:
        void: always
  vue/key-spacing: 1
  vue/keyword-spacing: 1
  vue/new-line-between-multi-line-property: 1
  vue/no-constant-condition: 1
  vue/no-empty-component-block: 1
  vue/no-empty-pattern: 1
  vue/no-extra-parens: 1
  vue/no-invalid-model-keys: 1
  vue/no-irregular-whitespace: 1
  vue/no-multiple-objects-in-class: 1
  vue/no-restricted-syntax: 1
  vue/no-sparse-arrays: 1
  vue/no-static-inline-styles: 1
  vue/no-template-target-blank: 1
  vue/no-undef-components: 1
  vue/no-unused-properties: 1
  vue/no-unused-refs: 1
  vue/no-use-computed-property-like-method: 1
  vue/no-useless-concat: 1
  vue/no-useless-mustaches: 1
  vue/no-useless-v-bind: 1
  vue/object-curly-newline: 1
  vue/object-curly-spacing:
    - 1
    - always
  vue/object-property-newline:
    - 1
    - allowAllPropertiesOnSameLine: true
  vue/operator-linebreak: 1
  vue/padding-line-between-blocks: 1
  vue/prefer-template: 1
  vue/require-default-prop: 0 #Default to undefined is all good
  vue/script-indent: 1
  vue/space-in-parens: 1
  vue/space-infix-ops: 1
  vue/space-unary-ops: 1
  vue/static-class-names-order: 1
  vue/template-curly-spacing: 1
  vue/v-for-delimiter-style: 1
  vue/v-on-function-call: 1
